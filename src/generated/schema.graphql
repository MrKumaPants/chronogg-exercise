### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Authorization {
  token: String!
  user: User!
}

type Brand {
  createdAt: DateTime!
  id: Int!
  name: String
  users: [User!]!
}

input BrandWhereUniqueInput {
  id: Int
  name: String
}

scalar DateTime

type Mutation {
  addUserToBrand(brandId: ID, userId: ID): Brand!
  createBrand(name: String!): Brand!
  createPost(brandId: ID, content: String, title: String!): Post!
  createUser(email: String!, name: String, password: String!): User!
  deleteBrand(id: ID): Brand
  deletePost(id: ID): Post
  login(email: String!, password: String!): Authorization!
  removeUserFromBrand(brandId: ID, userId: ID): Brand!
  updateBrand(id: ID, name: String): Brand!
  updatePost(content: String, id: ID, title: String): Post!
  updateUser(active: Boolean, email: String, id: ID, name: String, password: String): Authorization!
}

type Post {
  author: User!
  brand: Brand!
  content: String
  createdAt: DateTime!
  id: Int!
  title: String!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  brand(where: BrandWhereUniqueInput!): Brand
  brandPosts(id: ID!): [Post!]!
  brands(after: Int, before: Int, first: Int, last: Int, skip: Int): [Brand!]!
  me: User
  post(where: PostWhereUniqueInput!): Post
  posts(after: Int, before: Int, first: Int, last: Int, skip: Int): [Post!]!
  user(where: UserWhereUniqueInput!): User
  users(after: Int, before: Int, first: Int, last: Int, skip: Int): [User!]!
}

type User {
  active: Boolean!
  brands: [Brand!]!
  createdAt: DateTime!
  email: String!
  id: Int!
  name: String
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
